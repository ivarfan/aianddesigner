
$(document).ready(function() {

    var isMobile = false; //initiate as false
    // device detection
    if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) 
        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0,4))) { 
        isMobile = true;
    }

    $.easing.jswing = $.easing.swing;

    $.extend($.easing,
    {
        def: 'easeOutQuad',
        swing: function (x, t, b, c, d) {
            //alert($.easing.default);
            return $.easing[$.easing.def](x, t, b, c, d);
        },
        easeInQuad: function (x, t, b, c, d) {
            return c*(t/=d)*t + b;
        },
        easeOutQuad: function (x, t, b, c, d) {
            return -c *(t/=d)*(t-2) + b;
        },
        easeInOutQuad: function (x, t, b, c, d) {
            if ((t/=d/2) < 1) return c/2*t*t + b;
            return -c/2 * ((--t)*(t-2) - 1) + b;
        },
        easeInCubic: function (x, t, b, c, d) {
            return c*(t/=d)*t*t + b;
        },
        easeOutCubic: function (x, t, b, c, d) {
            return c*((t=t/d-1)*t*t + 1) + b;
        },
        easeInOutCubic: function (x, t, b, c, d) {
            if ((t/=d/2) < 1) return c/2*t*t*t + b;
            return c/2*((t-=2)*t*t + 2) + b;
        },
        easeInQuart: function (x, t, b, c, d) {
            return c*(t/=d)*t*t*t + b;
        },
        easeOutQuart: function (x, t, b, c, d) {
            return -c * ((t=t/d-1)*t*t*t - 1) + b;
        },
        easeInOutQuart: function (x, t, b, c, d) {
            if ((t/=d/2) < 1) return c/2*t*t*t*t + b;
            return -c/2 * ((t-=2)*t*t*t - 2) + b;
        },
        easeInQuint: function (x, t, b, c, d) {
            return c*(t/=d)*t*t*t*t + b;
        },
        easeOutQuint: function (x, t, b, c, d) {
            return c*((t=t/d-1)*t*t*t*t + 1) + b;
        },
        easeInOutQuint: function (x, t, b, c, d) {
            if ((t/=d/2) < 1) return c/2*t*t*t*t*t + b;
            return c/2*((t-=2)*t*t*t*t + 2) + b;
        },
        easeInSine: function (x, t, b, c, d) {
            return -c * Math.cos(t/d * (Math.PI/2)) + c + b;
        },
        easeOutSine: function (x, t, b, c, d) {
            return c * Math.sin(t/d * (Math.PI/2)) + b;
        },
        easeInOutSine: function (x, t, b, c, d) {
            return -c/2 * (Math.cos(Math.PI*t/d) - 1) + b;
        },
        easeInExpo: function (x, t, b, c, d) {
            return (t==0) ? b : c * Math.pow(2, 10 * (t/d - 1)) + b;
        },
        easeOutExpo: function (x, t, b, c, d) {
            return (t==d) ? b+c : c * (-Math.pow(2, -10 * t/d) + 1) + b;
        },
        easeInOutExpo: function (x, t, b, c, d) {
            if (t==0) return b;
            if (t==d) return b+c;
            if ((t/=d/2) < 1) return c/2 * Math.pow(2, 10 * (t - 1)) + b;
            return c/2 * (-Math.pow(2, -10 * --t) + 2) + b;
        },
        easeInCirc: function (x, t, b, c, d) {
            return -c * (Math.sqrt(1 - (t/=d)*t) - 1) + b;
        },
        easeOutCirc: function (x, t, b, c, d) {
            return c * Math.sqrt(1 - (t=t/d-1)*t) + b;
        },
        easeInOutCirc: function (x, t, b, c, d) {
            if ((t/=d/2) < 1) return -c/2 * (Math.sqrt(1 - t*t) - 1) + b;
            return c/2 * (Math.sqrt(1 - (t-=2)*t) + 1) + b;
        },
        easeInElastic: function (x, t, b, c, d) {
            var s=1.70158;var p=0;var a=c;
            if (t==0) return b;  if ((t/=d)==1) return b+c;  if (!p) p=d*.3;
            if (a < Math.abs(c)) { a=c; var s=p/4; }
            else var s = p/(2*Math.PI) * Math.asin (c/a);
            return -(a*Math.pow(2,10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )) + b;
        },
        easeOutElastic: function (x, t, b, c, d) {
            var s=1.70158;var p=0;var a=c;
            if (t==0) return b;  if ((t/=d)==1) return b+c;  if (!p) p=d*.3;
            if (a < Math.abs(c)) { a=c; var s=p/4; }
            else var s = p/(2*Math.PI) * Math.asin (c/a);
            return a*Math.pow(2,-10*t) * Math.sin( (t*d-s)*(2*Math.PI)/p ) + c + b;
        },
        easeInOutElastic: function (x, t, b, c, d) {
            var s=1.70158;var p=0;var a=c;
            if (t==0) return b;  if ((t/=d/2)==2) return b+c;  if (!p) p=d*(.3*1.5);
            if (a < Math.abs(c)) { a=c; var s=p/4; }
            else var s = p/(2*Math.PI) * Math.asin (c/a);
            if (t < 1) return -.5*(a*Math.pow(2,10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )) + b;
            return a*Math.pow(2,-10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )*.5 + c + b;
        },
        easeInBack: function (x, t, b, c, d, s) {
            if (s == undefined) s = 1.70158;
            return c*(t/=d)*t*((s+1)*t - s) + b;
        },
        easeOutBack: function (x, t, b, c, d, s) {
            if (s == undefined) s = 1.70158;
            return c*((t=t/d-1)*t*((s+1)*t + s) + 1) + b;
        },
        easeInOutBack: function (x, t, b, c, d, s) {
            if (s == undefined) s = 1.70158;
            if ((t/=d/2) < 1) return c/2*(t*t*(((s*=(1.525))+1)*t - s)) + b;
            return c/2*((t-=2)*t*(((s*=(1.525))+1)*t + s) + 2) + b;
        },
        easeInBounce: function (x, t, b, c, d) {
            return c - $.easing.easeOutBounce (x, d-t, 0, c, d) + b;
        },
        easeOutBounce: function (x, t, b, c, d) {
            if ((t/=d) < (1/2.75)) {
                return c*(7.5625*t*t) + b;
            } else if (t < (2/2.75)) {
                return c*(7.5625*(t-=(1.5/2.75))*t + .75) + b;
            } else if (t < (2.5/2.75)) {
                return c*(7.5625*(t-=(2.25/2.75))*t + .9375) + b;
            } else {
                return c*(7.5625*(t-=(2.625/2.75))*t + .984375) + b;
            }
        },
        easeInOutBounce: function (x, t, b, c, d) {
            if (t < d/2) return $.easing.easeInBounce (x, t*2, 0, c, d) * .5 + b;
            return $.easing.easeOutBounce (x, t*2-d, 0, c, d) * .5 + c*.5 + b;
        }
    });

    var baselineTop = 0;
    var movedTop = 0;
    var virtualKeyBoardUp = false;

    if ($(".customizationwizcontainer").find("input").length > 0) {
        baselineTop = document.querySelector(".customizationwizcontainer input").getBoundingClientRect().top;
    }

    document.body.style.height = window.innerHeight;
    document.body.style.width = window.innerWidth;
    let autoHeight = $(".customizationwizcontainer")[0].scrollHeight;
    let location = document.querySelector(".customizationwiz").getBoundingClientRect();
    let newHeight = window.innerHeight - 30 - $(".minimizecontainer").height() - $(".completioncontainer").height();
    if (location.top < 10 || newHeight < autoHeight) {
        $(".customizationwizcontainer").css("height", newHeight);
    } else {
        $(".customizationwizcontainer").css("height", "auto");
    }

    $(window).resize(function() {
        let autoHeight = $(".customizationwizcontainer")[0].scrollHeight;
        let location = document.querySelector(".customizationwiz").getBoundingClientRect();
        let newHeight = window.innerHeight - 30 - $(".minimizecontainer").height() - $(".completioncontainer").height();
        if (location.top < 10 || newHeight < autoHeight) {
            $(".customizationwizcontainer").css("height", newHeight);
        } else {
            $(".customizationwizcontainer").css("height", "auto");
        }

        if (document.hasFocus() === true) {
            let focusLocation = document.querySelector("#" + focus).getBoundingClientRect();
            let scrolledLocation = document.querySelector("#" + focus).scrollTop;
            $("#" + focus + "-list").css("left", focusLocation.left);
            if (focusLocation.top + scrolledLocation + 140 >= window.innerHeight) {
                let difference = focusLocation.top + scrolledLocation + 170 - window.innerHeight;
                let topPos = focusLocation.top + scrolledLocation - 44 - difference;
                $("#" + focus + "-list").css("top", topPos);
            } else {
                $("#" + focus + "-list").css("top", focusLocation.top + scrolledLocation - 44);
            }
        }

        if (hidden === true) {
            $(".customizationwiz").css("top", $(".customcontainer").height() - 36);
        }
    });

    $.fn.animateRotate = function(start, angle, duration, easing, complete) {
      var args = $.speed(duration, easing, complete);
      var step = args.step;
      return this.each(function(i, e) {
        args.complete = $.proxy(args.complete, e);
        args.step = function(now) {
          $.style(e, 'transform', 'rotate(' + now + 'deg)');
          if (step) return step.apply(e, arguments);
        };

        $({deg: start}).animate({deg: angle}, args);
      });
    };

    /***initializations***/
    $("body").addClass("noselect");

    var focus = "";
    var currentCustomPanel = "Navigation";
    var hidden = false;

    let color = {
        "Dusty Rose" : "rgb(212, 200, 182)",
        "Wheat" : "rgb(184, 146, 106)",
        "Blackish" : "rgb(45, 45, 43)",
        "Breath" : "rgb(234, 230, 223)",
        "Wind" : "rgb(176, 176, 176)",
        "Coral" : "rgb(255, 83, 61)",
        "Teal": "rgb(15, 143, 143)",
        "Olive": "rgb(104, 105, 33)",
        "Sea": "rgb(31, 71, 141)",
        "Dew": "rgb(145, 179, 183)"
    };


    let style = {
        "nav" : {
            "backgroundColor" : "Dusty Rose",
            "opacity" : "1",
        }
    };

    function updateDesign(focusInput, selectValue) {
        let items = focusInput.split("-");
        let section = items[0];
        let attribute = items[1];
        if (attribute === "opacity") {
            selectValue = selectValue / 100;
        }
        style[section][attribute] = selectValue;
        $("#" + focus).find(".dropdownoption").text(selectValue);
        if ((attribute.toLowerCase()).includes("backgroundcolor")) {
            selectValue = color[selectValue];
            $("#" + focus + "-chosenicon").css("backgroundColor", selectValue);
        }
        $("." + section).animate({opacity: 0}, 200, "easeInCubic");
        if ("opacity" in style[section]) {
            var opacityToChange = style[section]["opacity"];
        } else {
            var opacityToChange = 1;
        }
        setTimeout(function() {
            $("." + section).css(attribute, selectValue).animate({opacity: opacityToChange}, 200, "easeOutCubic");
        }, 200);
        return;
    };

    $(document).click(function(event) {
        $(':focus').blur();
    });

    $(".minimizebuttoncontainer").click(function(event) {
        deltaHeight = $(".customizationwiz").height() - 36;
        $(this).fadeOut(200, "easeInCubic");
        setTimeout(function() {
            $(".expandbuttoncontainer").fadeIn(200, "easeOutCubic");
        }, 200);
        $(".customizationwiz").animate({
              top: "+=" + deltaHeight + "px",
        }, 600, "easeInOutCubic");
        hidden = true;
    });

    $(".expandbuttoncontainer").click(function(event) {
        deltaHeight = $(".customizationwiz").height() - 36;
        $(this).fadeOut(200, "easeInCubic");
        setTimeout(function() {
            $(".minimizebuttoncontainer").fadeIn(200, "easeOutCubic");
        }, 200);
        $(".customizationwiz").animate({
              top: "-=" + deltaHeight + "px",
        }, 600, "easeInOutCubic");
        hidden = false;
    });

    $(".dropdowncontainer").click(function(event) {
        event.stopPropagation();
        if (event.target !== event.currentTarget) {
            var tapped = $(this).attr("id");
        } else {
            var tapped = event.target.id;
        }
        focus = tapped;
        $("#" + tapped).attr("tabindex", 0).focus();
        let items = tapped.split("-");
        let section = items[0];
        let attribute = items[1];
        let location = document.querySelector("#" + tapped).getBoundingClientRect();
        let scrolledLocation = document.querySelector("#" + tapped).scrollTop;
        if (virtualKeyBoardUp === true) {
            $("#" + tapped + "-list").css("left", location.left);
            if (location.top + 257 + scrolledLocation + 140 >= window.innerHeight) {
                let difference = location.top + 257 + scrolledLocation + 170 - window.innerHeight;
                let topPos = location.top + 257 + scrolledLocation - 44 - difference;
                $("#" + tapped + "-list").css("top", topPos);
            } else {
                $("#" + tapped + "-list").css("top", location.top + 257 + scrolledLocation - 44);
            }
            virtualKeyBoardUp = false;
        /**/
        } else {
            $("#" + tapped + "-list").css("left", location.left);
            if (location.top + scrolledLocation + 140 >= window.innerHeight) {
                let difference = location.top + scrolledLocation + 170 - window.innerHeight;
                let topPos = location.top + scrolledLocation - 44 - difference;
                $("#" + tapped + "-list").css("top", topPos);
            } else {
                $("#" + tapped + "-list").css("top", location.top + scrolledLocation - 44);
            }
        }
        console.log($("#" + tapped + "-list").css("top"));
        $("#" + tapped + "-list").animate({
              top: "+=7px",
              opacity: "show"
        }, 300, "easeOutCubic");
        $("#" + tapped + "-arrow").animateRotate(0, 180, 250, "easeInOutCubic");
    });

    $(".dropdownoptioncontainer").click(function(event) {
        event.stopPropagation();
        let value = $(this).text();
        updateDesign(focus, value);
        $("#" + focus).blur();
    });

    $(".dropdowncontainer").blur(function(event) {
        $("#" + focus + "-list").animate({
              top: "-=7px",
              opacity: "hide",
              height: "hide"
        }, 300, "easeOutCubic");
        $("#" + focus + "-arrow").animateRotate(180, 360, 250, "easeInOutCubic");
    });

    $("input").click(function(event) {
        event.stopPropagation();
        if (event.target !== event.currentTarget) {
            var tapped = $(this).attr("id");
        } else {
            var tapped = event.target.id;
        }
        focus = tapped;
        virtualKeyBoardUp = true;
    });

    $("input").keyup(function(event) {
        if (event.keyCode === 13) {
            event.preventDefault();
            $(this).blur();
        }
    });

    $("input").blur(function(event) {
        let value = document.getElementById(focus).value;
        if (value === "") {
            value = 100;
        } else if (value > 100) {
            value = 100;
            document.getElementById(focus).value = 100;
        }
        movedTop = document.querySelector(".customizationwizcontainer input").getBoundingClientRect().top;
        updateDesign(focus, value);
    });

});